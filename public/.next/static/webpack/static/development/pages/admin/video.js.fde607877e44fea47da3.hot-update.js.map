{"version":3,"file":"static/webpack/static/development/pages/admin/video.js.fde607877e44fea47da3.hot-update.js","sources":["webpack:///./pages/admin/video.js"],"sourcesContent":["import React from 'react';\nimport Router from 'next/router'\nimport \"../../src/styles/main.scss\";\nimport withAuth from  '../../src/hocs/withAuth'\n\nimport CategoriesService from '../../src/services/Categories';\nconst categories = new CategoriesService();\n\nimport Logo from '../../src/components/logo';\nimport Footer from '../../src/components/footer';\n\nimport FormErrors from '../../src/utils/FormErrors';\n\nclass AdminVideo extends React.Component {\n    constructor() {\n        super();\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.state = {\n            filmId: Router.query.idFilm,\n            category: \"\",\n            film: {},\n            title: \"\",\n            title_pt: \"\",\n            vimed_id: \"\",\n            titleValid: false,\n            titlePtValid: false,\n            vimeoValid: false,\n            formErrors: {title: '', titulo: '', vimeo: ''}\n        }\n    }\n\n\n    handleInput (e) {\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState({[name]: value}, \n            () => { this.validateField(name, value) });\n    }\n\n    componentDidMount() {\n        categories.getFilmById(Router.query.idFilm).then(res =>  {\n            this.setState({film: res, category: res.category.name});\n        })\n    }\n\n    validateField(fieldName, value) {\n        let fieldValidationErrors = this.state.formErrors;\n        let titleValid = this.state.titleValid;\n        let titlePtValid = this.state.titlePtValid;\n        let vimeoValid = this.state.vimeoValid;\n      \n        switch(fieldName) {\n          case 'title':\n            titleValid = value.length >= 3;\n            fieldValidationErrors.title = titleValid ? '' : ' is too short';\n            break;\n          case 'title_pt':\n            titlePtValid = value.length >= 3;\n            fieldValidationErrors.titulo = titlePtValid ? '': ' é muito curto';\n            break;\n          case 'vimeo_id':\n            vimeoValid = value.length >= 5;\n            fieldValidationErrors.vimeo = vimeoValid ? '': ': id error';\n            break;\n          default:\n            break;\n        }\n        this.setState({\n            formErrors: \n                fieldValidationErrors,\n                titleValid,\n                titlePtValid,\n                vimeoValid\n        }, this.validateForm);\n    }\n\n    validateForm() {\n        this.setState({formValid: this.state.titleValid && this.state.titlePtValid && this.state.vimeoValid});\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        const { \n            title, \n            title_pt, \n            vimeo_id,\n            filmId\n        } = this.state;\n\n        const data = {\n            title, \n            title_pt, \n            vimeo_id,\n            filmId\n        }\n\n        categories.saveVideo(data).then(res => {\n            // Router.push(`/admin/${category_id}/${category}/film/${res.data.id}/${res.data.title}/videos`)\n            console.log(res)\n            this.state.films.videos.push(res);\n        })\n    }\n\n    done() {\n        Router.push(`/admin`)\n    }\n\n    render () {\n        const { film, category } = this.state;\n        return (\n            <section className=\"admin\">\n                <header className=\"header\">\n                    <div className=\"arrow-back action\" onClick={() => Router.push(`/admin/${film.category_id}/${category}/film/${film.id}`)}>\n                        <i className=\"fas fa-arrow-left icon\"></i>\n                        <small className=\"text\">Back</small>\n                    </div>\n                    <Logo />\n                </header>\n                <main className=\"main\">\n                    <h2 className=\"title\">{category}</h2>\n                    <form className=\"form -grid\" onSubmit={this.handleSubmit}>\n                        <div className=\"col -four\">\n                            <small>English</small>\n                            <input type=\"text\" id=\"title\" name=\"title\" className=\"input\" \n                                value={this.state.title} placeholder=\"Title*\" onChange={(event) => this.handleInput(event)} />\n                        </div>\n                        <div className=\"col -four\">\n                            <small>Portuguese</small>\n                            <input type=\"text\" id=\"titulo\" name=\"title_pt\" className=\"input\" \n                                value={this.state.title_pt} placeholder=\"Título*\" onChange={(event) => this.handleInput(event)} />\n                        </div>\n                        <div className=\"col -four\">\n                            <small>Vimeo Code</small>\n                            <input type=\"text\" id=\"vimeo_id\" name=\"vimeo_id\" className=\"input\" \n                                value={this.state.vimeo_id} placeholder=\"VimeoID*\" onChange={(event) => this.handleInput(event)} />\n                        </div>\n                        <button className={`button -center ${!this.state.formValid ? '-disabled' : ''}`} disabled={!this.state.formValid} >Add Video</button>\n                    </form>\n                    <FormErrors formErrors={this.state.formErrors} />\n                </main>\n                <Footer />\n            </section>\n        );\n    }\n}\n\nexport default withAuth(AdminVideo);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAVA;AAHA;AAeA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAdA;AACA;AAeA;AACA;AAEA;AACA;AACA;AALA;AAOA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAlIA;AACA;AAoIA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}