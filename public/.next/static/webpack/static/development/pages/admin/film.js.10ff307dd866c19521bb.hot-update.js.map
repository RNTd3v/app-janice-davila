{"version":3,"file":"static/webpack/static/development/pages/admin/film.js.10ff307dd866c19521bb.hot-update.js","sources":["webpack:///./pages/admin/film.js"],"sourcesContent":["import React from 'react';\nimport Router from 'next/router'\nimport \"../../src/styles/main.scss\";\nimport withAuth from  '../../src/hocs/withAuth'\n\nimport CategoriesService from '../../src/services/Categories';\nconst categories = new CategoriesService();\n\nimport Logo from '../../src/components/logo';\nimport Footer from '../../src/components/footer';\n\nimport FormErrors from '../../src/utils/FormErrors';\n\nclass AdminFilm extends React.Component {\n    constructor() {\n        super();\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.state = {\n            category: Router.query.category,\n            title: \"\",\n            title_pt: \"\",\n            description: \"\",\n            description_pt: \"\",\n            picture: \"\",\n            is_active: true,\n            category_id: Router.query.id,\n            film: {},\n            titleValid: false,\n            titlePtValid: false,\n            pictureValid: false,\n            formErrors: {title: '', titulo: '', picture: ''},\n        }\n    }\n\n    handleChange(file)\n    {\n        const category = this.state.category.toLowerCase();\n        const title = this.state.title.toLowerCase().replace(/[\\s-]/g,'-') || 'film';\n        const data = new FormData();\n        data.append('picture', file[0]);\n        data.append('title', title);\n        data.append('category', category);\n\n        categories.uploadPicture(data).then(res => {\n            this.setState({\n                picture: res.data\n            });\n            this.validateField('picture', res.data);\n        })\n    }\n\n    handleInput (e) {\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState({[name]: value}, \n            () => { this.validateField(name, value) });\n    }\n\n    componentDidMount() {\n        Router.query.idFilm ?\n        categories.getFilmById(Router.query.idFilm).then(res =>  {\n            this.setState({\n                title: res.title,\n                title_pt: res.title_pt,\n                description: res.description,\n                description_pt: res.description_pt,\n                picture: res.picture,\n                is_active: res.is_active,\n                titleValid: true,\n                titlePtValid: true,\n                pictureValid: true\n            });\n            this.setState({formValid: this.state.titleValid && this.state.titlePtValid && this.state.pictureValid});\n        })\n        : null\n    }\n\n    validateField(fieldName, value) {\n        let fieldValidationErrors = this.state.formErrors;\n        let titleValid = this.state.titleValid;\n        let titlePtValid = this.state.titlePtValid;\n        let pictureValid = this.state.pictureValid;\n      \n        switch(fieldName) {\n          case 'title':\n            titleValid = value.length >= 3;\n            fieldValidationErrors.title = titleValid ? '' : ' is too short';\n            break;\n          case 'title_pt':\n            titlePtValid = value.length >= 3;\n            fieldValidationErrors.titulo = titlePtValid ? '': ' é muito curto';\n            break;\n          case 'picture':\n            pictureValid = value.length >= 3;\n            fieldValidationErrors.picture = pictureValid ? '': ': select an image';\n            break;\n          default:\n            break;\n        }\n        this.setState({\n            formErrors: \n                fieldValidationErrors,\n                titleValid,\n                titlePtValid,\n                pictureValid\n        }, this.validateForm);\n    }\n\n    validateForm() {\n        this.setState({formValid: this.state.titleValid && this.state.titlePtValid && this.state.pictureValid});\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        const { \n            title, \n            title_pt, \n            description, \n            description_pt,\n            is_active,\n            picture,\n            category_id \n        } = this.state;\n\n        const data = {\n            title, \n            title_pt, \n            description, \n            description_pt,\n            is_active,\n            picture,\n            category_id \n        }\n\n        categories.saveFilm(data).then(res => {\n            console.log(res);\n        })\n    }\n\n    render () {\n        const { category, category_id } = this.state;\n        return (\n            <section className=\"admin\">\n                <header className=\"header\">\n                    <div className=\"arrow-back action\" onClick={() => Router.push(`/admin/${category_id}/films/`)}>\n                        <i className=\"fas fa-arrow-left icon\"></i>\n                        <small className=\"text\">Back</small>\n                    </div>\n                    <Logo />\n                </header>\n                <main className=\"main\">\n                    <h2 className=\"title\">{category}</h2>\n                    <form className=\"form -grid\" onSubmit={this.handleSubmit}>\n                        <div className=\"col\">\n                            <small>English</small>\n                            <input type=\"text\" id=\"title\" name=\"title\" className=\"input\" \n                                value={this.state.title} placeholder=\"Title*\" onChange={(event) => this.handleInput(event)} />\n                            <textarea placeholder=\"Description\" id=\"description\" name=\"description\" \n                                value={this.state.description} className=\"textarea\" onChange={(event) => this.handleInput(event)}></textarea>\n                        </div>\n                        <div className=\"col\">\n                            <small>Portuguese</small>\n                            <input type=\"text\" id=\"titulo\" name=\"title_pt\" className=\"input\" \n                                value={this.state.title_pt} placeholder=\"Título*\" onChange={(event) => this.handleInput(event)} />\n                            <textarea placeholder=\"Descrição\" id=\"descricao\" name=\"description_pt\" \n                                value={this.state.description_pt} className=\"textarea\" onChange={(event) => this.handleInput(event)}></textarea>\n                        </div>\n                        <div className=\"picture\">\n                            <label className=\"label\">Picture*</label>\n                            <input type=\"file\" id=\"picture\" name=\"picture\" className=\"input\" placeholder=\"Picture\" onChange={ (e) => this.handleChange(e.target.files) }/>\n                            {\n                                this.state.picture ? <img src={this.state.picture} /> : null\n                            }\n                            <small className=\"required\">*Required items</small>\n                        </div>\n                        <button className={`button -center ${!this.state.formValid ? '-disabled' : ''}`} disabled={!this.state.formValid} >Save and Continue</button>\n                    </form>\n                    <FormErrors formErrors={this.state.formErrors} />\n                </main>\n                <Footer />\n            </section>\n        );\n    }\n}\n\nexport default withAuth(AdminFilm);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAbA;AAJA;AAmBA;AACA;;;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AACA;AAUA;AAAA;AAAA;AACA;AAEA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAdA;AACA;AAeA;AACA;AAEA;AACA;AACA;AALA;AAOA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AA1KA;AACA;AA4KA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}