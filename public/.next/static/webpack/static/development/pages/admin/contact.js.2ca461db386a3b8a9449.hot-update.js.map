{"version":3,"file":"static/webpack/static/development/pages/admin/contact.js.2ca461db386a3b8a9449.hot-update.js","sources":["webpack:///./pages/admin/contact.js"],"sourcesContent":["import React from 'react';\nimport Router from 'next/router'\nimport \"../../src/styles/main.scss\";\nimport withAuth from  '../../src/hocs/withAuth';\n\nimport ContactService from '../../src/services/ContactService';\nconst contact = new ContactService();\n\nimport Logo from '../../src/components/logo';\nimport Footer from '../../src/components/footer';\n\nclass AdminContact extends React.Component {\n    constructor() {\n        super();\n        this.handleSubmitPhone = this.handleSubmitPhone.bind(this);\n        this.handleSubmitEmail = this.handleSubmitEmail.bind(this);\n        this.state = {\n            aboutId: 1,\n            phones: [],\n            emails: [],\n            phone: \"\",\n            email: \"\",\n            phoneName: \"\",\n            emailName: \"\"\n        }\n    }\n\n\n    handleInput (e) {\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState({[name]: value});\n    }\n\n    componentDidMount() {\n        contact.getPhone().then(res =>  {\n            console.log(res);\n            this.setState({phones: res});\n        })\n\n        contact.getEmail().then(res =>  {\n            console.log(res);\n            this.setState({emails: res});\n        })\n    }\n\n    handleSubmitPhone(e) {\n        e.preventDefault();\n        const { \n            phone, \n            phoneName, \n            aboutId\n        } = this.state;\n\n        const data = {\n            name: phoneName, \n            number: phone, \n            about_id: aboutId\n        }\n\n        contact.savePhone(data).then(res => {\n            this.setState({\n                phones: [...this.state.phones, res]\n            })\n        })\n    }\n\n    deletePhone(phoneId, index) {\n        contact.deletePhone(phoneId).then(res => {\n            const { phones } = this.state;\n            this.setState({\n                phones: [...phones.slice(0, index), ...phones.slice(index+1)]\n            })\n        })\n    }\n\n    handleSubmitEmail(e) {\n        e.preventDefault();\n        const { \n            email, \n            emailName, \n            aboutId\n        } = this.state;\n\n        const data = {\n            name: emailName, \n            email: email, \n            about_id: aboutId\n        }\n\n        contact.saveEmail(data).then(res => {\n            this.setState({\n                emails: [...this.state.emails, res]\n            })\n        })\n    }\n\n    deleteEmail(emailId, index) {\n        contact.deleteEmail(emailId).then(res => {\n            const { emails } = this.state;\n            this.setState({\n                emails: [...emails.slice(0, index), ...emails.slice(index+1)]\n            })\n        })\n    }\n\n    done() {\n        Router.push(`/admin`)\n    }\n\n    render () {\n        const { phones, emails } = this.state;\n        return (\n            <section className=\"admin\">\n                <header className=\"header\">\n                    <div className=\"arrow-back action\" onClick={() => Router.push(`/admin`)}>\n                        <i className=\"fas fa-arrow-left icon\"></i>\n                        <small className=\"text\">Back</small>\n                    </div>\n                    <Logo />\n                </header>\n                <main className=\"main\">\n                    <h2 className=\"title\">Contact > Phone</h2>\n                    <form className=\"form -grid -contact\" onSubmit={this.handleSubmitPhone}>\n                        <div className=\"col -three\">\n                            <small>Name</small>\n                            <input type=\"text\" id=\"namePhone\" name=\"namePhone\" className=\"input\" \n                                value={this.state.phoneName} placeholder=\"Name\" onChange={(event) => this.setState({phoneName: event.target.value})} />\n                        </div>\n                        <div className=\"col -three\">\n                            <small>Number</small>\n                            <input type=\"text\" id=\"phone\" name=\"phone\" className=\"input\" \n                                value={this.state.phone} placeholder=\"Phone\" onChange={(event) => this.setState({phone: event.target.value})} />\n                        </div>\n                        <div className=\"col -three\">\n                            <button className=\"button -right\" >Add Phone</button>\n                        </div>\n                    </form>\n                    <h2 className=\"title\">Contact > E-mail</h2>\n                    <form className=\"form -grid -contact\" onSubmit={this.handleSubmitEmail}>\n                        <div className=\"col -three\">\n                            <small>Name</small>\n                            <input type=\"text\" id=\"nameEmail\" name=\"nameEmail\" className=\"input\" \n                                value={this.state.emailName} placeholder=\"Name\" onChange={(event) => this.setState({emailName: event.target.value})} />\n                        </div>\n                        <div className=\"col -three\">\n                            <small>Email</small>\n                            <input type=\"text\" id=\"email\" name=\"email\" className=\"input\" \n                                value={this.state.email} placeholder=\"Email\" onChange={(event) => this.setState({email: event.target.value})} />\n                        </div>\n                        <div className=\"col -three\">\n                            <button className=\"button -right\" >Add Email</button>\n                        </div>\n                    </form>\n                    <div className=\"list-contact\">\n                        <div className=\"phones\">\n                            <h3>Phones</h3>\n                            <section className=\"list\">\n                                { \n                                    phones.length === 0 \n                                    ? 'No phone registered' \n                                    : \n                                    phones.map((phone, index) => (\n                                        <article className=\"phone\" key={phone.id}>\n                                            <h3>{phone.name}</h3>\n                                            <p>{phone.number}</p>\n                                            <button className=\"button -small\" onClick={() => this.deletePhone(phone.id, index)}>Excluir Phone</button>\n                                        </article>\n                                    ))\n                                }\n                            </section>\n                        </div>\n                        <div className=\"emails\">\n                            <h3>Emails</h3>\n                            <section className=\"list\">\n                                { \n                                    emails.length === 0 \n                                    ? 'No email registered' \n                                    : \n                                    emails.map((email, index) => (\n                                        <article className=\"email\" key={email.id}>\n                                            <h3>{email.name}</h3>\n                                            <p>{email.email}</p>\n                                            <button className=\"button -small\" onClick={() => this.deleteEmail(email.id, index)}>Excluir Email</button>\n                                        </article>\n                                    ))\n                                }\n                            </section>\n                        </div>\n                    </div>\n                    <button className=\"button -center\" onClick={() => this.done()}>Finalizar</button>\n                </main>\n                <Footer />\n            </section>\n        );\n    }\n}\n\nexport default withAuth(AdminContact);"],"mappings":"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","sourceRoot":""}